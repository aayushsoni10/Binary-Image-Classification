# -*- coding: utf-8 -*-
"""Binary_image_classification_testing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fASy5R-GmmI7RMtQTwZqFo-u8aFdDe3o
"""

import pandas as pd
import numpy as np
from keras.layers import Conv2D , MaxPooling2D , Dense, Flatten , Input , Dropout
from keras.models import Sequential , Model
import keras
import tensorflow as tf
from PIL import Image
from keras.models import model_from_json
import os
from keras.preprocessing.image import ImageDataGenerator
from keras import utils as np_utils  
from matplotlib import image

json_file = open('model.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)
# load weights into new model
loaded_model.load_weights("model_2016A7PS0720G.h5")
print("Loaded model from disk")
loaded_model.compile(loss = 'binary_crossentropy' , optimizer = 'adam' , metrics = ['accuracy'])

images = []
df = pd.read_csv(r'/content/test_data_file_id.csv')
s = df['Id']
for i in range(len(s)):
    loc = r'/content/final_test/final_test/'+str(s[i])+'.jpg'
    img1 = Image.open(loc)
    img1 = img1.resize((192,192), Image.BICUBIC)
    nx , ny = img1.size
    img = np.asarray(img1.resize((int(nx*1),int(ny*1)),Image.BICUBIC))
    images.append(img)
    img1.close()
    
X_t = np.asarray(images)
X_t = X_t/255.0

pred = loaded_model.predict(X_t)
df['Category'] = [x for x in pred]
df.to_csv("sa1.csv")

df1 = pd.read_csv(r'/content/sa1.csv')
t = df1['Category']
for x in range(len(t)):
  y = t[x]
  if(x%100==0):
    print(x)
  a = len(y)
  z = y[1:a-1]
  df1['Category'][x] = round(float(z))
df1.to_csv('fsa1.csv')